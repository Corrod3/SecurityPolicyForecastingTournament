paste, collapse="\n" ),
x = "What is the probability of this event to happen?",
y = "Distribution of estimates") + # labels
expand_limits(x=c(0,1)) + # set range of x-axis
theme_bw() +
scale_x_continuous(labels=percent) # percentages
}
agg.plot(17)
agg.plot <- function(q) {
# compute superforecast group mean
mean.super <- SPFT %>% filter(bnt.s > 1 & time.fq.sec.log > summary(SPFT$time.fq.sec.log)[2]) %>%
select(contains(fq[q]))%>% unlist()  %>% mean()
mean.all <- SPFT %>% select(contains(fq[q]))%>% unlist() %>% mean()
ggplot(SPFT, aes(x=eval(parse(text = fq[q])))) +
geom_density(alpha=.3, fill="#C02F39") +
geom_vline(data=SPFT,
aes(xintercept=mean(eval(parse(text = fq[q])))),
linetype="dashed", size=1.5) + # group average
annotate("text", x = mean.all, y = 0.5, angle = 90, label = "mean",
vjust = 1.2, parse = TRUE, color = "black") + # label for vline
# vertical line for dropping case
geom_vline(data=filter(SPFT, bnt.s > 1 &
time.fq.sec.log > summary(SPFT$time.fq.sec.log)[2]),
aes(xintercept=mean(eval(parse(text = fq[q])))),
linetype="dashed", size=1.5, color = "#e41a1c") + # group average
annotate("text", x = mean.super, y = 0.5, angle = 90, label = "superforecasters",
vjust = 1.2, parse = TRUE, color = "#e41a1c") + # label for vline
# vertical line for weighted probabilities
geom_vline(aes(xintercept=probs.mean.w.bnt.time[q]),
linetype="dashed", size=1.5, color = "#377eb8") + # group average
annotate("text", x = probs.mean.w.bnt.time[q], y = 0.5, angle = 90, label = "weighted",
vjust = 1.2, parse = TRUE, color = "#377eb8") + # label for vline
# vertical line for extremized probability
geom_vline(aes(xintercept=probs.extrem[q]),
linetype="dashed", size=1.5, color = "#4daf4a") + # group average
annotate("text", x = probs.extrem[q], y = 0.5, angle = 90, label = "extremized",
vjust = 1.2, parse = TRUE, color = "#4daf4a") + # label for vline
labs(title = sapply(strwrap(as.character(FQ[q,2]), 40, simplify=FALSE),
paste, collapse="\n" ),
x = "What is the probability of this event to happen?",
y = "Distribution of estimates") + # labels
expand_limits(x=c(0,1)) + # set range of x-axis
theme_bw() +
scale_x_continuous(labels=percent) # percentages
}
agg.plot(17)
### Script for poster plots ###################################################
# Setting Working directory
try(setwd("D:/Eigene Datein/Dokumente/Uni/Hertie/Materials/Master thesis/SecurityPolicyForecastingTournament"), silent = TRUE)
# load main script
source("main.R")
### Tournament section ########################################################
response.poster <- function(q){
ggplot(FO.plot, aes(x=eval(parse(text = fq[q])))) +
geom_density(alpha=.3, fill="#C02F39") +
geom_vline(data=filter(FO.plot2,
fq.id == paste("fq",as.character(q), sep = "") &
part.group == "all"),
aes(xintercept=mean,  colour=part.group),
linetype="dashed", size=1.5) + # group average
labs(title = sapply(strwrap(as.character(FQ[q,2]), 70, simplify=FALSE),
paste, collapse="\n" ),
x = "What is the probability of this event to happen?",
y = "Distribution of estimates") + # labels
theme(axis.text = element_text(size = 13),
axis.title=element_text(size=14),
plot.title = element_text(size=18),
panel.background = element_blank(),
panel.grid.major = element_line(colour = "grey"),
aspect.ratio=2/4) + # axis + background
guides(fill=guide_legend(title="Participants")) + # legend title
scale_color_manual("Mean", values = c("#C02F39")) + # legend mean vline
expand_limits(x=c(0,1)) + # set range of x-axis
scale_x_continuous(labels=percent) + # percentages
geom_vline(xintercept=as.numeric(FQ[q,4]),
colour="#696969",
linetype="dashed", size=1.5,
show.legend = TRUE) # correct answer
}
response.poster(8)
ggsave(filename="plots/reponseFQ8.pdf", plot=response.poster(8), device=cairo_pdf)
ggsave(filename="plots/reponseFQ9.pdf", plot=response.poster(9), device=cairo_pdf)
ggsave(filename="plots/reponseFQ16.pdf", plot=response.poster(16), device=cairo_pdf)
ggsave(filename="plots/reponseFQ13.pdf", plot=response.poster(13), device=cairo_pdf)
ggsave(filename="plots/reponseFQ6.pdf", plot=response.poster(6), device=cairo_pdf)
# Brier distribution
brier.plot2 <- ggplot(SB, aes(x = brier.avg)) +
geom_histogram(binwidth=.05, position="dodge", fill = "#C02F39") + # bar type
theme_bw() +
theme(axis.title = element_text(size=18, colour = "#696969"), # Labels axis font size
axis.text = element_text(size=14, colour = "#696969"),
axis.line = element_line(colour = "#696969"),
axis.ticks = element_line(colour = "#696969")) +
labs( # title = "Brier score distribution",
x = "Brier score",
y = "Frequency") # labels))
# save brier score distribution
ggsave(filename="plots/brierPlot.pdf", plot=brier.plot2, device=cairo_pdf)
# Aggregation plot
ggsave(filename="plots/aggPlot.pdf", plot=agg.plot(17), device=cairo_pdf)
### Script for poster plots ###################################################
# Setting Working directory
try(setwd("D:/Eigene Datein/Dokumente/Uni/Hertie/Materials/Master thesis/SecurityPolicyForecastingTournament"), silent = TRUE)
# load main script
source("main.R")
### Tournament section ########################################################
response.poster <- function(q){
ggplot(FO.plot, aes(x=eval(parse(text = fq[q])))) +
geom_density(alpha=.3, fill="#C02F39") +
geom_vline(data=filter(FO.plot2,
fq.id == paste("fq",as.character(q), sep = "") &
part.group == "all"),
aes(xintercept=mean,  colour=part.group),
linetype="dashed", size=1.5) + # group average
labs(title = sapply(strwrap(as.character(FQ[q,2]), 70, simplify=FALSE),
paste, collapse="\n" ),
x = "What is the probability of this event to happen?",
y = "Distribution of estimates") + # labels
theme(axis.text = element_text(size = 13),
axis.title=element_text(size=14),
plot.title = element_text(size=18),
panel.background = element_blank(),
panel.grid.major = element_line(colour = "grey"),
aspect.ratio=2/4) + # axis + background
guides(fill=guide_legend(title="Participants")) + # legend title
scale_color_manual("Mean", values = c("#C02F39")) + # legend mean vline
expand_limits(x=c(0,1)) + # set range of x-axis
scale_x_continuous(labels=percent) + # percentages
geom_vline(xintercept=as.numeric(FQ[q,4]),
colour="#696969",
linetype="dashed", size=1.5,
show.legend = TRUE) # correct answer
}
response.poster(8)
ggsave(filename="plots/reponseFQ8.pdf", plot=response.poster(8), device=cairo_pdf)
ggsave(filename="plots/reponseFQ9.pdf", plot=response.poster(9), device=cairo_pdf)
ggsave(filename="plots/reponseFQ16.pdf", plot=response.poster(16), device=cairo_pdf)
ggsave(filename="plots/reponseFQ13.pdf", plot=response.poster(13), device=cairo_pdf)
ggsave(filename="plots/reponseFQ6.pdf", plot=response.poster(6), device=cairo_pdf)
# Brier distribution
brier.plot2 <- ggplot(SB, aes(x = brier.avg)) +
geom_histogram(binwidth=.05, position="dodge", fill = "#C02F39") + # bar type
theme_bw() +
theme(axis.title = element_text(size=18, colour = "#696969"), # Labels axis font size
axis.text = element_text(size=14, colour = "#696969"),
axis.line = element_line(colour = "#696969"),
axis.ticks = element_line(colour = "#696969")) +
labs( # title = "Brier score distribution",
x = "Brier score",
y = "Frequency") # labels))
# save brier score distribution
ggsave(filename="plots/brierPlot.pdf", plot=brier.plot2, device=cairo_pdf)
# Aggregation plot
ggsave(filename="plots/aggPlot.pdf", plot=agg.plot(17), device=cairo_pdf)
### Research section ##########################################################
# BNT Scores distribution
# Distribution of bnt scores
bnt.plot2 <- ggplot(SPFT, aes(x = bnt.s)) +
geom_bar(fill = "#C02F39") +
theme_bw() +
theme(axis.title = element_text(size=22, colour = "#696969"), # Labels axis font size
axis.text = element_text(size=18, colour = "#696969"),
axis.line = element_line(colour = "#696969"),
axis.ticks = element_line(colour = "#696969"),
title = element_text(size=24, colour = "#696969")) +
labs(title = "Distribution of Berlin Numeracy Test results",
x = "BNT Score (# of correct answers)",
y = "# of respondents") # labels
ggsave(filename="plots/bntPlot.pdf", plot=bnt.plot2, device=cairo_pdf)
# Correlation Mct-Brier Scores
ggsave(filename="plots/corBrierMctPlot.pdf", plot=cor.brier.mct.plot, device=cairo_pdf)
cor.brier.mct.plot2 <- ggplot(filter(SPFT, !is.na(mct.c)), aes(x=mct.c, y=brier.avg)) +
geom_point(shape=1) +    # Use hollow circles
#geom_smooth(method=lm, color = "#C02F39") +   # Add linear regression line
theme_bw() +
theme(axis.title = element_text(size=18, colour = "#696969", family = "serif"), # Labels axis font size
axis.text = element_text(size=14, colour = "#696969"),
axis.line = element_line(colour = "#696969"),
axis.ticks = element_line(colour = "#696969")) +
labs(x = "Moral Competency Score",
y = "Brier Score") # labels
ggsave(filename="plots/corBrierMctPlot_noline.pdf", plot=cor.brier.mct.plot2, device=cairo_pdf)
# Correlation Brier log(time) correlation
ggsave(filename="plots/corBrierTimeLogPlot.pdf", plot=cor.brier.time.log.plot, device=cairo_pdf)
cor.brier.time.log.plot2 <- ggplot(filter(SPFT, !is.na(time.fq.sec)),
aes(x=time.fq.sec.log, y=brier.avg)) +
geom_point(shape=1) +    # Use hollow circles
#  geom_smooth(method="lm",  linetype = 1) +
#geom_smooth(method=lm, color = "#C02F39", size = 2) +   # Add linear regression line
theme_bw() +
theme(axis.title = element_text(size=20, colour = "#696969", family = "serif"), # Labels axis font size
axis.text = element_text(size=16, colour = "#696969"),
axis.line = element_line(colour = "#696969"),
axis.ticks = element_line(colour = "#696969")) +
labs(x = "log(time)",
y = "Brier score") # labels
ggsave(filename="plots/corBrierTimeLogPlot_noline.pdf", plot=cor.brier.time.log.plot2, device=cairo_pdf)
# Correlation Brier linear time
ggsave(filename="plots/corBrierTimePlot.pdf", plot=cor.brier.time.plot, device=cairo_pdf)
cor.brier.time.plot2 <- ggplot(filter(SPFT, !is.na(time.fq.sec)),
aes(x=time.fq.sec, y=brier.avg)) +
geom_point(shape=1) +    # Use hollow circles
#  geom_line(data = log.model.df,
#            aes(x, y, color = "Log Model"),
#            size = 2, linetype = 1, color = "#C02F39") +
theme_bw() +
theme(axis.title = element_text(size=20, colour = "#696969", family = "serif"), # Labels axis font size
axis.text = element_text(size=16, colour = "#696969"),
axis.line = element_line(colour = "#696969"),
axis.ticks = element_line(colour = "#696969")) +
labs(x = "time in min (linear)",
y = "Brier score") # labels
ggsave(filename="plots/corBrierTimePlot_noline.pdf", plot=cor.brier.time.plot2, device=cairo_pdf)
# Hypothesis 3 time
ggsave(filename="plots/hypo3TimePlot.pdf", plot=hypo3.time.plot, device=cairo_pdf)
ggplot(filter(SPFT, !is.na(mct.c)), aes(x=mct.c, y=brier.avg)) +
geom_point() +
theme_bw() +
theme(axis.title = element_text(size=18, colour = "#696969", family = "serif"), # Labels axis font size
axis.text = element_text(size=14, colour = "#696969"),
axis.line = element_line(colour = "#696969"),
axis.ticks = element_line(colour = "#696969")) +
labs(x = "Moral Competency Score",
y = "Brier Score") # labels
### Script for poster plots ###################################################
# Setting Working directory
try(setwd("D:/Eigene Datein/Dokumente/Uni/Hertie/Materials/Master thesis/SecurityPolicyForecastingTournament"), silent = TRUE)
# load main script
source("main.R")
### Tournament section ########################################################
response.poster <- function(q){
ggplot(FO.plot, aes(x=eval(parse(text = fq[q])))) +
geom_density(alpha=.3, fill="#C02F39") +
geom_vline(data=filter(FO.plot2,
fq.id == paste("fq",as.character(q), sep = "") &
part.group == "all"),
aes(xintercept=mean,  colour=part.group),
linetype="dashed", size=1.5) + # group average
labs(title = sapply(strwrap(as.character(FQ[q,2]), 70, simplify=FALSE),
paste, collapse="\n" ),
x = "What is the probability of this event to happen?",
y = "Distribution of estimates") + # labels
theme(axis.text = element_text(size = 13),
axis.title=element_text(size=14),
plot.title = element_text(size=18),
panel.background = element_blank(),
panel.grid.major = element_line(colour = "grey"),
aspect.ratio=2/4) + # axis + background
guides(fill=guide_legend(title="Participants")) + # legend title
scale_color_manual("Mean", values = c("#C02F39")) + # legend mean vline
expand_limits(x=c(0,1)) + # set range of x-axis
scale_x_continuous(labels=percent) + # percentages
geom_vline(xintercept=as.numeric(FQ[q,4]),
colour="#696969",
linetype="dashed", size=1.5,
show.legend = TRUE) # correct answer
}
response.poster(8)
ggsave(filename="plots/reponseFQ8.pdf", plot=response.poster(8), device=cairo_pdf)
ggsave(filename="plots/reponseFQ9.pdf", plot=response.poster(9), device=cairo_pdf)
ggsave(filename="plots/reponseFQ16.pdf", plot=response.poster(16), device=cairo_pdf)
ggsave(filename="plots/reponseFQ13.pdf", plot=response.poster(13), device=cairo_pdf)
ggsave(filename="plots/reponseFQ6.pdf", plot=response.poster(6), device=cairo_pdf)
# Brier distribution
brier.plot2 <- ggplot(SB, aes(x = brier.avg)) +
geom_histogram(binwidth=.05, position="dodge", fill = "#C02F39") + # bar type
theme_bw() +
theme(axis.title = element_text(size=18, colour = "#696969"), # Labels axis font size
axis.text = element_text(size=14, colour = "#696969"),
axis.line = element_line(colour = "#696969"),
axis.ticks = element_line(colour = "#696969")) +
labs( # title = "Brier score distribution",
x = "Brier score",
y = "Frequency") # labels))
# save brier score distribution
ggsave(filename="plots/brierPlot.pdf", plot=brier.plot2, device=cairo_pdf)
# Aggregation plot
ggsave(filename="plots/aggPlot.pdf", plot=agg.plot(17), device=cairo_pdf)
### Research section ##########################################################
# BNT Scores distribution
# Distribution of bnt scores
bnt.plot2 <- ggplot(SPFT, aes(x = bnt.s)) +
geom_bar(fill = "#C02F39") +
theme_bw() +
theme(axis.title = element_text(size=22, colour = "#696969"), # Labels axis font size
axis.text = element_text(size=18, colour = "#696969"),
axis.line = element_line(colour = "#696969"),
axis.ticks = element_line(colour = "#696969"),
title = element_text(size=24, colour = "#696969")) +
labs(title = "Distribution of Berlin Numeracy Test results",
x = "BNT Score (# of correct answers)",
y = "# of respondents") # labels
ggsave(filename="plots/bntPlot.pdf", plot=bnt.plot2, device=cairo_pdf)
# Correlation Mct-Brier Scores
ggsave(filename="plots/corBrierMctPlot.pdf", plot=cor.brier.mct.plot, device=cairo_pdf)
cor.brier.mct.plot2 <- ggplot(filter(SPFT, !is.na(mct.c)), aes(x=mct.c, y=brier.avg)) +
geom_point(shape=1) +    # Use hollow circles
theme_bw() +
theme(axis.title = element_text(size=18, colour = "#696969"), # Labels axis font size
axis.text = element_text(size=14, colour = "#696969"),
axis.line = element_line(colour = "#696969"),
axis.ticks = element_line(colour = "#696969")) +
labs(x = "Moral Competency Score",
y = "Brier Score") # labels
ggsave(filename="plots/corBrierMctPlot_noline.pdf", plot=cor.brier.mct.plot2, device=cairo_pdf)
cor.brier.mct.plot3 <- ggplot(filter(SPFT, !is.na(mct.c)), aes(x=mct.c, y=brier.avg)) +
geom_point() +
theme_bw() +
theme(axis.title = element_text(size=18, colour = "#696969"), # Labels axis font size
axis.text = element_text(size=14, colour = "#696969"),
axis.line = element_line(colour = "#696969"),
axis.ticks = element_line(colour = "#696969")) +
labs(x = "Moral Competency Score",
y = "Brier Score") # labels
ggsave(filename="plots/corBrierMctPlot_noline2.pdf", plot=cor.brier.mct.plot3, device=cairo_pdf)
# Correlation Brier log(time) correlation
ggsave(filename="plots/corBrierTimeLogPlot.pdf", plot=cor.brier.time.log.plot, device=cairo_pdf)
cor.brier.time.log.plot2 <- ggplot(filter(SPFT, !is.na(time.fq.sec)),
aes(x=time.fq.sec.log, y=brier.avg)) +
geom_point(shape=1) +    # Use hollow circles
theme_bw() +
theme(axis.title = element_text(size=20, colour = "#696969"), # Labels axis font size
axis.text = element_text(size=16, colour = "#696969"),
axis.line = element_line(colour = "#696969"),
axis.ticks = element_line(colour = "#696969")) +
labs(x = "log(time)",
y = "Brier score") # labels
ggsave(filename="plots/corBrierTimeLogPlot_noline.pdf", plot=cor.brier.time.log.plot2, device=cairo_pdf)
cor.brier.time.log.plot3 <- ggplot(filter(SPFT, !is.na(time.fq.sec)),
aes(x=time.fq.sec.log, y=brier.avg)) +
geom_point() +
theme_bw() +
theme(axis.title = element_text(size=20, colour = "#696969"), # Labels axis font size
axis.text = element_text(size=16, colour = "#696969"),
axis.line = element_line(colour = "#696969"),
axis.ticks = element_line(colour = "#696969")) +
labs(x = "log(time)",
y = "Brier score") # labels
ggsave(filename="plots/corBrierTimeLogPlot_noline2.pdf", plot=cor.brier.time.log.plot3, device=cairo_pdf)
# Correlation Brier linear time
ggsave(filename="plots/corBrierTimePlot.pdf", plot=cor.brier.time.plot, device=cairo_pdf)
cor.brier.time.plot2 <- ggplot(filter(SPFT, !is.na(time.fq.sec)),
aes(x=time.fq.sec, y=brier.avg)) +
geom_point(shape=1) +    # Use hollow circles
#  geom_line(data = log.model.df,
#            aes(x, y, color = "Log Model"),
#            size = 2, linetype = 1, color = "#C02F39") +
theme_bw() +
theme(axis.title = element_text(size=20, colour = "#696969", family = "serif"), # Labels axis font size
axis.text = element_text(size=16, colour = "#696969"),
axis.line = element_line(colour = "#696969"),
axis.ticks = element_line(colour = "#696969")) +
labs(x = "time in min (linear)",
y = "Brier score") # labels
ggsave(filename="plots/corBrierTimePlot_noline.pdf", plot=cor.brier.time.plot2, device=cairo_pdf)
cor.brier.time.plot3 <- ggplot(filter(SPFT, !is.na(time.fq.sec)),
aes(x=time.fq.sec, y=brier.avg)) +
geom_point() +
theme_bw() +
theme(axis.title = element_text(size=20, colour = "#696969"), # Labels axis font size
axis.text = element_text(size=16, colour = "#696969"),
axis.line = element_line(colour = "#696969"),
axis.ticks = element_line(colour = "#696969")) +
labs(x = "time in min (linear)",
y = "Brier score") # labels
ggsave(filename="plots/corBrierTimePlot_noline2.pdf", plot=cor.brier.time.plot3, device=cairo_pdf)
# Hypothesis 3 time
ggsave(filename="plots/hypo3TimePlot.pdf", plot=hypo3.time.plot, device=cairo_pdf)
### Script for poster plots ###################################################
# Setting Working directory
try(setwd("D:/Eigene Datein/Dokumente/Uni/Hertie/Materials/Master thesis/SecurityPolicyForecastingTournament"), silent = TRUE)
# load main script
source("main.R")
### Tournament section ########################################################
response.poster <- function(q){
ggplot(FO.plot, aes(x=eval(parse(text = fq[q])))) +
geom_density(alpha=.3, fill="#C02F39") +
geom_vline(data=filter(FO.plot2,
fq.id == paste("fq",as.character(q), sep = "") &
part.group == "all"),
aes(xintercept=mean,  colour=part.group),
linetype="dashed", size=1.5) + # group average
labs(title = sapply(strwrap(as.character(FQ[q,2]), 70, simplify=FALSE),
paste, collapse="\n" ),
x = "What is the probability of this event to happen?",
y = "Distribution of estimates") + # labels
theme(axis.text = element_text(size = 13),
axis.title=element_text(size=14),
plot.title = element_text(size=18),
panel.background = element_blank(),
panel.grid.major = element_line(colour = "grey"),
aspect.ratio=2/4) + # axis + background
guides(fill=guide_legend(title="Participants")) + # legend title
scale_color_manual("Mean", values = c("#C02F39")) + # legend mean vline
expand_limits(x=c(0,1)) + # set range of x-axis
scale_x_continuous(labels=percent) + # percentages
geom_vline(xintercept=as.numeric(FQ[q,4]),
colour="#696969",
linetype="dashed", size=1.5,
show.legend = TRUE) # correct answer
}
response.poster(8)
ggsave(filename="plots/reponseFQ8.pdf", plot=response.poster(8), device=cairo_pdf)
ggsave(filename="plots/reponseFQ9.pdf", plot=response.poster(9), device=cairo_pdf)
ggsave(filename="plots/reponseFQ16.pdf", plot=response.poster(16), device=cairo_pdf)
ggsave(filename="plots/reponseFQ13.pdf", plot=response.poster(13), device=cairo_pdf)
ggsave(filename="plots/reponseFQ6.pdf", plot=response.poster(6), device=cairo_pdf)
# Brier distribution
brier.plot2 <- ggplot(SB, aes(x = brier.avg)) +
geom_histogram(binwidth=.05, position="dodge", fill = "#C02F39") + # bar type
theme_bw() +
theme(axis.title = element_text(size=18, colour = "#696969"), # Labels axis font size
axis.text = element_text(size=14, colour = "#696969"),
axis.line = element_line(colour = "#696969"),
axis.ticks = element_line(colour = "#696969")) +
labs( # title = "Brier score distribution",
x = "Brier score",
y = "Frequency") # labels))
# save brier score distribution
ggsave(filename="plots/brierPlot.pdf", plot=brier.plot2, device=cairo_pdf)
# Aggregation plot
ggsave(filename="plots/aggPlot.pdf", plot=agg.plot(17), device=cairo_pdf)
### Research section ##########################################################
# BNT Scores distribution
# Distribution of bnt scores
bnt.plot2 <- ggplot(SPFT, aes(x = bnt.s)) +
geom_bar(fill = "#C02F39") +
theme_bw() +
theme(axis.title = element_text(size=22, colour = "#696969"), # Labels axis font size
axis.text = element_text(size=18, colour = "#696969"),
axis.line = element_line(colour = "#696969"),
axis.ticks = element_line(colour = "#696969"),
title = element_text(size=24, colour = "#696969")) +
labs(title = "Distribution of Berlin Numeracy Test results",
x = "BNT Score (# of correct answers)",
y = "# of respondents") # labels
ggsave(filename="plots/bntPlot.pdf", plot=bnt.plot2, device=cairo_pdf)
# Correlation Mct-Brier Scores
ggsave(filename="plots/corBrierMctPlot.pdf", plot=cor.brier.mct.plot, device=cairo_pdf)
cor.brier.mct.plot2 <- ggplot(filter(SPFT, !is.na(mct.c)), aes(x=mct.c, y=brier.avg)) +
geom_point(shape=1) +    # Use hollow circles
theme_bw() +
theme(axis.title = element_text(size=18, colour = "#696969"), # Labels axis font size
axis.text = element_text(size=14, colour = "#696969"),
axis.line = element_line(colour = "#696969"),
axis.ticks = element_line(colour = "#696969")) +
labs(x = "Moral Competency Score",
y = "Brier Score") # labels
ggsave(filename="plots/corBrierMctPlot_noline.pdf", plot=cor.brier.mct.plot2, device=cairo_pdf)
cor.brier.mct.plot3 <- ggplot(filter(SPFT, !is.na(mct.c)), aes(x=mct.c, y=brier.avg)) +
geom_point() +
theme_bw() +
theme(axis.title = element_text(size=18, colour = "#696969"), # Labels axis font size
axis.text = element_text(size=14, colour = "#696969"),
axis.line = element_line(colour = "#696969"),
axis.ticks = element_line(colour = "#696969")) +
labs(x = "Moral Competency Score",
y = "Brier Score") # labels
ggsave(filename="plots/corBrierMctPlot_noline2.pdf", plot=cor.brier.mct.plot3, device=cairo_pdf)
# Correlation Brier log(time) correlation
ggsave(filename="plots/corBrierTimeLogPlot.pdf", plot=cor.brier.time.log.plot, device=cairo_pdf)
cor.brier.time.log.plot2 <- ggplot(filter(SPFT, !is.na(time.fq.sec)),
aes(x=time.fq.sec.log, y=brier.avg)) +
geom_point(shape=1) +    # Use hollow circles
theme_bw() +
theme(axis.title = element_text(size=20, colour = "#696969"), # Labels axis font size
axis.text = element_text(size=16, colour = "#696969"),
axis.line = element_line(colour = "#696969"),
axis.ticks = element_line(colour = "#696969")) +
labs(x = "log(time)",
y = "Brier score") # labels
ggsave(filename="plots/corBrierTimeLogPlot_noline.pdf", plot=cor.brier.time.log.plot2, device=cairo_pdf)
cor.brier.time.log.plot3 <- ggplot(filter(SPFT, !is.na(time.fq.sec)),
aes(x=time.fq.sec.log, y=brier.avg)) +
geom_point() +
theme_bw() +
theme(axis.title = element_text(size=20, colour = "#696969"), # Labels axis font size
axis.text = element_text(size=16, colour = "#696969"),
axis.line = element_line(colour = "#696969"),
axis.ticks = element_line(colour = "#696969")) +
labs(x = "log(time)",
y = "Brier score") # labels
ggsave(filename="plots/corBrierTimeLogPlot_noline2.pdf", plot=cor.brier.time.log.plot3, device=cairo_pdf)
# Correlation Brier linear time
ggsave(filename="plots/corBrierTimePlot.pdf", plot=cor.brier.time.plot, device=cairo_pdf)
cor.brier.time.plot2 <- ggplot(filter(SPFT, !is.na(time.fq.sec)),
aes(x=time.fq.sec, y=brier.avg)) +
geom_point(shape=1) +    # Use hollow circles
#  geom_line(data = log.model.df,
#            aes(x, y, color = "Log Model"),
#            size = 2, linetype = 1, color = "#C02F39") +
theme_bw() +
theme(axis.title = element_text(size=20, colour = "#696969", family = "serif"), # Labels axis font size
axis.text = element_text(size=16, colour = "#696969"),
axis.line = element_line(colour = "#696969"),
axis.ticks = element_line(colour = "#696969")) +
labs(x = "time in min (linear)",
y = "Brier score") # labels
ggsave(filename="plots/corBrierTimePlot_noline.pdf", plot=cor.brier.time.plot2, device=cairo_pdf)
cor.brier.time.plot3 <- ggplot(filter(SPFT, !is.na(time.fq.sec)),
aes(x=time.fq.sec, y=brier.avg)) +
geom_point() +
theme_bw() +
theme(axis.title = element_text(size=20, colour = "#696969"), # Labels axis font size
axis.text = element_text(size=16, colour = "#696969"),
axis.line = element_line(colour = "#696969"),
axis.ticks = element_line(colour = "#696969")) +
labs(x = "time in min (linear)",
y = "Brier score") # labels
ggsave(filename="plots/corBrierTimePlot_noline2.pdf", plot=cor.brier.time.plot3, device=cairo_pdf)
# Hypothesis 3 time
ggsave(filename="plots/hypo3TimePlot.pdf", plot=hypo3.time.plot, device=cairo_pdf)
